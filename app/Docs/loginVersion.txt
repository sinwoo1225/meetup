package com.example.meetingmanager;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class LoginActivity extends Activity {
    EditText id, pass, email;
    Button login, register;
    CheckBox remember;
    TextView forget;
    int mode=0; //0이면 로그인, 1이면 회원가입

    FileIO fileio = new FileIO(this, this);
    WebSocketConnect wsc = new WebSocketConnect(this, this);

    @Override
    public void onContentChanged() { //자동완성 확인
        super.onContentChanged();
        fileio.loginFileRead();
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        id = findViewById(R.id.et_id);
        pass = findViewById(R.id.et_pass);
        email = findViewById(R.id.et_email);
        login = findViewById(R.id.btn_login);
        register = findViewById(R.id.btn_register);
        remember = findViewById(R.id.cb_remember);
        forget = findViewById(R.id.tv_forget);

        login.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if(mode==0) { //로그인 시도
                    if(wsc.login(id.getText().toString(), pass.getText().toString())==1){
                        Intent intent = new Intent(LoginActivity.this, MainActivity.class);
                        startActivity(intent);
                    }
                    else
                        Toast.makeText(getApplicationContext(),"Wrong Information. Try again.", Toast.LENGTH_SHORT).show();
                }
                else{ //회원가입 시도
                    if(wsc.register(id.getText().toString(), pass.getText().toString(), email.getText().toString())==1){
                        Toast.makeText(getApplicationContext(),"Signed up successfully.", Toast.LENGTH_SHORT).show();
                    }
                    else
                        Toast.makeText(getApplicationContext(),"Wrong Information. Try again.", Toast.LENGTH_SHORT).show();
                    remember.setVisibility(View.VISIBLE);
                    email.setVisibility(View.INVISIBLE);
                    login.setText("sign in");
                    register.setText("sign up");
                    mode=0;
                }
            }
        });
        register.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) { //로그인-회원가입 모드 변경
                if(mode==0) {
                    remember.setVisibility(View.INVISIBLE);
                    email.setVisibility(View.VISIBLE);
                    login.setText("CONFIRM");
                    register.setText("CANCEL");
                    mode=1;
                }
                else{
                    remember.setVisibility(View.VISIBLE);
                    email.setVisibility(View.INVISIBLE);
                    login.setText("sign in");
                    register.setText("sign up");
                    mode=0;
                }
            }
        });
        forget.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(LoginActivity.this, MainActivity.class);
                startActivity(intent);
            }
        });
    }
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////


package com.example.meetingmanager;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.util.Log;
import android.widget.Toast;

import com.fasterxml.jackson.databind.ObjectMapper;

import org.java_websocket.client.WebSocketClient;
import org.java_websocket.handshake.ServerHandshake;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Map;

import static android.content.ContentValues.TAG;

public class WebSocketConnect {
    Activity activity;
    Context context;
    ObjectMapper mapper = new ObjectMapper();
    String jsonString, id, pass, email;
    Map<String, Object> map = new HashMap<>();
    int type, check;
    final String loginURI = "ws://a3c3a9704aff.ngrok.io/ws";

    WebSocketClient mWebSocketClient;

    public WebSocketConnect(Activity activity, Context context){
        this.activity = activity;
        this.context = context;
    }

    public int login(String id, String pass){
        this.id = id;
        this.pass = pass;
        type = 0;
        connectWebSocket();

        return check;
    }

    public int register(String id, String pass, String email){
        this.id = id;
        this.pass = pass;
        this.email = email;
        type = 1;
        connectWebSocket();

        return check;
    }

    private void connectWebSocket() { //웹소켓 연결
        URI uri;
        try {
            uri = new URI(loginURI);
        } catch (URISyntaxException e) {
            e.printStackTrace(); return;
        }

        mWebSocketClient = new WebSocketClient(uri) {
            @Override
            public void onOpen(ServerHandshake serverHandshake) {
                Log.i("Websocket", "Opened");
                JSONObject json = new JSONObject();
                try {
                    json.put("type", type);
                    json.put("id", id);
                    json.put("pass", pass);
                    Log.d(TAG, "C->WSS: " + json.toString());
                    mWebSocketClient.send(json.toString());
                } catch (JSONException e) {
                    e.printStackTrace(); return;
                }
            }
            @Override
            public void onMessage(String s) { //답장받기
                Log.i("Websocket", "OnMessage");
                final String message = s;
                activity.runOnUiThread(new Runnable() {
                    @Override public void run() {
                        try {
                            String rcv = message;
                            map = mapper.readValue(rcv, Map.class);
                            jsonString = mapper.writeValueAsString(map);
                        }catch(IOException e) {
                            e.printStackTrace(); return;
                        }
                        if(jsonString=="Success"){
                                check = 1;
                        }
                        else{
                            check = 0;
                        }
                    }
                });
            }
            @Override
            public void onClose(int i, String s, boolean b) {
                Log.i("Websocket", "Closed " + s);
            }
            @Override public void onError(Exception e) {
                Log.i("Websocket", "Error " + e.getMessage());
            }
        };
        mWebSocketClient.connect();
    }
}


//////////////////////////////////////////////////////////


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.example.meetingmanager.LoginActivity">

    <EditText
        android:id="@+id/et_id"
        android:layout_width="300dp"
        android:layout_height="wrap_content"
        android:hint=" ID"
        android:textSize="30sp"
        android:layout_marginTop="100dp"
        android:layout_gravity="center_horizontal"/>

    <EditText
        android:id="@+id/et_pass"
        android:layout_width="300dp"
        android:layout_height="wrap_content"
        android:hint="password"
        android:textSize="30sp"
        android:layout_marginTop="30dp"
        android:layout_gravity="center_horizontal"
        android:inputType="textPassword"/>

    <EditText
        android:id="@+id/et_email"
        android:layout_width="300dp"
        android:layout_height="wrap_content"
        android:hint=" EMAIL"
        android:textSize="30sp"
        android:layout_marginTop="50dp"
        android:layout_gravity="center_horizontal"
        android:visibility="invisible"/>

    <CheckBox
        android:id="@+id/cb_remember"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:layout_marginTop="30dp"
        android:textSize="20sp"
        android:text="Remember ID/pass"/>

    <Button
        android:id="@+id/btn_login"
        android:layout_width="300dp"
        android:layout_height="wrap_content"
        android:text="sign in"
        android:textSize="25sp"
        android:textColor="#FFFFFF"
        android:layout_marginTop="10dp"
        android:layout_gravity="center_horizontal"
        android:background="@drawable/btn_rounded"/>

    <Button
        android:id="@+id/btn_register"
        android:layout_width="300dp"
        android:layout_height="wrap_content"
        android:text="sign up"
        android:textSize="25sp"
        android:textColor="#FFFFFF"
        android:layout_marginTop="30dp"
        android:layout_gravity="center_horizontal"
        android:background="@drawable/btn_rounded"/>

    <TextView
        android:id="@+id/tv_forget"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Forgot password?"
        android:textSize="20sp"
        android:layout_gravity="center_horizontal"
        android:textColor="#000000"
        android:layout_marginTop="10dp"/>
</LinearLayout>